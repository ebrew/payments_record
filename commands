Run a network
===============================
python manage.py runserver 172.20.10.2:8000


Create app
===============================
python manage.py startapp <appname>


Install a dependency
===============================
pip install <package>  or  python -m pip install <package>


Display dependencies in cmd
===============================
pip freeze  or  python -m pip freeze


Create project requirement.txt
===============================
pip freeze > requirements.txt  or  python -m pip freeze > requirements.txt


Make app migrations
===============================
python manage.py makemigrations <appname>
python manage.py sqlmigrate <appname> 0001
python manage.py migrate
python manage.py createsuperuser
python.exe -m pip install --upgrade pip' command.


Dump project data
===============================
python manage.py dumpdata --natural-foreign --natural-primary -e contenttypes -e auth.Permission --indent 2 > dump.json


Dump project data
===============================
python manage.py migrate
python manage.py loaddata "path/to/fixture/file"  eg. python manage.py loaddata "data.json"


For excluding venv
===============================
coverage run --omit='*/venv/*' manage.py test


Helps to know where exactly needs to be tested
===============================
coverage report


Helps to know where exactly needs to be tested in html
===============================
coverage html


installation command, Creates the requirement text file
===============================
python -m  pip freeze > requirements.txt


List packages installed
===============================
python -m  pip list

Gathering all static files
===============================
python manage.py collectstatic